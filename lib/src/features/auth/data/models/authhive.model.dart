// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:hive/hive.dart';

part 'authhive.model.g.dart'; // This file will be generated by running build_runner

@HiveType(typeId: 0) // Unique typeId for each Hive object
class AuthHiveModel extends HiveObject {
  @HiveField(0)
  final String email;

  @HiveField(1)
  final String idToken;

  @HiveField(2)
  final String name;

  @HiveField(3)
  final String? photoUrl;

  @HiveField(4)
  final String accesstoken;
    @HiveField(5)
  final Subscription? subscription;
    @HiveField(6,defaultValue: [])
  final List<BookProgress> bookProgress;
    @HiveField(7,defaultValue: [])
  final List<ReadHistory> readHistory;
    @HiveField(8,defaultValue: [])
  final List<FavouriteBooks> favoriteBooks;
    @HiveField(9,defaultValue: [])
  final List<UploadedBooks> uplaodedbooks;

  AuthHiveModel({
    required this.email,
    required this.idToken,
    required this.name,
    this.photoUrl,
    required this.accesstoken,
        this.subscription,
    this.bookProgress = const [],
    this.readHistory = const [],
    this.favoriteBooks = const [],
    this.uplaodedbooks = const [],
  });

  // You can add toJson and fromJson methods if needed
}

@HiveType(typeId: 1) // Unique typeId for each Hive object
class Subscription {
    @HiveField(0)
  final String id;
    @HiveField(1)
  final DateTime startDate;
    @HiveField(2)
  final DateTime endDate;
    @HiveField(3)
  final bool isActive;

  Subscription({
    required this.id,
    required this.startDate,
    required this.endDate,
    required this.isActive,

  });
}

@HiveType(typeId: 2)
class BookProgress {
     @HiveField(0)
  final String bookId;
     @HiveField(1)
  final int currentChapter;
     @HiveField(2) 
  final int totalChapters;
     @HiveField(3)
  final DateTime lastReadTimestamp;

  BookProgress({
    required this.bookId,
    required this.currentChapter,
    required this.totalChapters,
    required this.lastReadTimestamp,
  });
 
}

@HiveType(typeId: 3)
class ReadHistory {
    @HiveField(0)
  final String bookId;
   @HiveField(1)
   final DateTime readAt;

  ReadHistory({
    required this.bookId,
    required this.readAt,
  });

}
@HiveType(typeId: 4)
class FavouriteBooks {
    @HiveField(0)
  final String bookId;
    @HiveField(2)
   final DateTime addedAt;

  FavouriteBooks({
    required this.bookId,
    required this.addedAt,
  });
 
}
@HiveType(typeId: 5)
class UploadedBooks {
   @HiveField(0)
  final String bookId;
    @HiveField(1)
  final DateTime uploadedAt;
 

  UploadedBooks({
    required this.bookId,
    required this.uploadedAt,
  });

}
